# %c 輸出日誌訊息所屬的類別的全名
# %d 輸出日誌時間點的日期或時間，指定格式的方式：%d{yyy-MM-dd HH:mm:ss }。
# %l 輸出日誌事件的發生位置，即輸出日誌訊息的語句處於它所在的類別的第幾行。
# %m 輸出訊息，如log(message)中的message。
# %n 輸出一個列尾符號。
# %p 輸出優先階層，即DEBUG，INFO，WARN，ERROR，FATAL。如果是調用debug()輸出的，則為DEBUG，依此類推。
# %r 輸出自應用啟動到輸出該日誌訊息所耗費的毫秒數。
# %t 輸出產生該日誌事件的線程名。
# %r 輸出自應用啟動到輸出該日誌訊息所耗費的毫秒數。
# %f 輸出日誌訊息所屬的類別的類別名。

log4j.rootLogger=Info, NormalToConsole, NormalToFile, ErrorToFile

# NormalToConsole
log4j.appender.NormalToConsole=org.apache.log4j.ConsoleAppender
log4j.appender.NormalToConsole.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.NormalToConsole.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH:mm:ss} : %m%n

# NormalToFile
log4j.appender.NormalToFile=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.NormalToFile.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.NormalToFile.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH:mm:ss} : %m%n
log4j.appender.NormalToFile.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
log4j.appender.NormalToFile.rollingPolicy.fileNamePattern=log/console/%d{yyyy-MM}/console_%d{yyyy-MM-dd-HH}.log
log4j.appender.NormalToFile.append=true
log4j.appender.NormalToFile.threshold=INFO
log4j.appender.NormalToFile.encoding=UTF-8

# ErrorToFile
log4j.appender.ErrorToFile=org.apache.log4j.rolling.RollingFileAppender
log4j.appender.ErrorToFile.layout=org.apache.log4j.EnhancedPatternLayout
log4j.appender.ErrorToFile.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH:mm:ss} <%t.%c(%l)> : %m%n
log4j.appender.ErrorToFile.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
log4j.appender.ErrorToFile.rollingPolicy.fileNamePattern=log/error/%d{yyyy-MM}/error_%d{yyyy-MM-dd-HH}.log
log4j.appender.ErrorToFile.append=true
log4j.appender.ErrorToFile.threshold=ERROR
log4j.appender.ErrorToFile.encoding=UTF-8
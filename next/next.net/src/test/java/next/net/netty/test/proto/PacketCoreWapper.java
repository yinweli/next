// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PacketCore.proto

package next.net.netty.test.proto;

public final class PacketCoreWapper {
  private PacketCoreWapper() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PacketCoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PacketCore)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 type = 1;</code>
     */
    java.util.List<java.lang.Integer> getTypeList();
    /**
     * <code>repeated int32 type = 1;</code>
     */
    int getTypeCount();
    /**
     * <code>repeated int32 type = 1;</code>
     */
    int getType(int index);

    /**
     * <code>optional .Packet1 Packet1 = 101;</code>
     */
    boolean hasPacket1();
    /**
     * <code>optional .Packet1 Packet1 = 101;</code>
     */
    next.net.netty.test.proto.Packet1Wapper.Packet1 getPacket1();
    /**
     * <code>optional .Packet1 Packet1 = 101;</code>
     */
    next.net.netty.test.proto.Packet1Wapper.Packet1OrBuilder getPacket1OrBuilder();

    /**
     * <code>optional .Packet2 Packet2 = 102;</code>
     */
    boolean hasPacket2();
    /**
     * <code>optional .Packet2 Packet2 = 102;</code>
     */
    next.net.netty.test.proto.Packet2Wapper.Packet2 getPacket2();
    /**
     * <code>optional .Packet2 Packet2 = 102;</code>
     */
    next.net.netty.test.proto.Packet2Wapper.Packet2OrBuilder getPacket2OrBuilder();
  }
  /**
   * Protobuf type {@code PacketCore}
   */
  public  static final class PacketCore extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PacketCore)
      PacketCoreOrBuilder {
    // Use PacketCore.newBuilder() to construct.
    private PacketCore(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PacketCore() {
      type_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PacketCore(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                type_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              type_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                type_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                type_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 810: {
              next.net.netty.test.proto.Packet1Wapper.Packet1.Builder subBuilder = null;
              if (packet1_ != null) {
                subBuilder = packet1_.toBuilder();
              }
              packet1_ = input.readMessage(next.net.netty.test.proto.Packet1Wapper.Packet1.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(packet1_);
                packet1_ = subBuilder.buildPartial();
              }

              break;
            }
            case 818: {
              next.net.netty.test.proto.Packet2Wapper.Packet2.Builder subBuilder = null;
              if (packet2_ != null) {
                subBuilder = packet2_.toBuilder();
              }
              packet2_ = input.readMessage(next.net.netty.test.proto.Packet2Wapper.Packet2.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(packet2_);
                packet2_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          type_ = java.util.Collections.unmodifiableList(type_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return next.net.netty.test.proto.PacketCoreWapper.internal_static_PacketCore_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return next.net.netty.test.proto.PacketCoreWapper.internal_static_PacketCore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              next.net.netty.test.proto.PacketCoreWapper.PacketCore.class, next.net.netty.test.proto.PacketCoreWapper.PacketCore.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> type_;
    /**
     * <code>repeated int32 type = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getTypeList() {
      return type_;
    }
    /**
     * <code>repeated int32 type = 1;</code>
     */
    public int getTypeCount() {
      return type_.size();
    }
    /**
     * <code>repeated int32 type = 1;</code>
     */
    public int getType(int index) {
      return type_.get(index);
    }
    private int typeMemoizedSerializedSize = -1;

    public static final int PACKET1_FIELD_NUMBER = 101;
    private next.net.netty.test.proto.Packet1Wapper.Packet1 packet1_;
    /**
     * <code>optional .Packet1 Packet1 = 101;</code>
     */
    public boolean hasPacket1() {
      return packet1_ != null;
    }
    /**
     * <code>optional .Packet1 Packet1 = 101;</code>
     */
    public next.net.netty.test.proto.Packet1Wapper.Packet1 getPacket1() {
      return packet1_ == null ? next.net.netty.test.proto.Packet1Wapper.Packet1.getDefaultInstance() : packet1_;
    }
    /**
     * <code>optional .Packet1 Packet1 = 101;</code>
     */
    public next.net.netty.test.proto.Packet1Wapper.Packet1OrBuilder getPacket1OrBuilder() {
      return getPacket1();
    }

    public static final int PACKET2_FIELD_NUMBER = 102;
    private next.net.netty.test.proto.Packet2Wapper.Packet2 packet2_;
    /**
     * <code>optional .Packet2 Packet2 = 102;</code>
     */
    public boolean hasPacket2() {
      return packet2_ != null;
    }
    /**
     * <code>optional .Packet2 Packet2 = 102;</code>
     */
    public next.net.netty.test.proto.Packet2Wapper.Packet2 getPacket2() {
      return packet2_ == null ? next.net.netty.test.proto.Packet2Wapper.Packet2.getDefaultInstance() : packet2_;
    }
    /**
     * <code>optional .Packet2 Packet2 = 102;</code>
     */
    public next.net.netty.test.proto.Packet2Wapper.Packet2OrBuilder getPacket2OrBuilder() {
      return getPacket2();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getTypeList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(typeMemoizedSerializedSize);
      }
      for (int i = 0; i < type_.size(); i++) {
        output.writeInt32NoTag(type_.get(i));
      }
      if (packet1_ != null) {
        output.writeMessage(101, getPacket1());
      }
      if (packet2_ != null) {
        output.writeMessage(102, getPacket2());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < type_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(type_.get(i));
        }
        size += dataSize;
        if (!getTypeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        typeMemoizedSerializedSize = dataSize;
      }
      if (packet1_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, getPacket1());
      }
      if (packet2_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, getPacket2());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof next.net.netty.test.proto.PacketCoreWapper.PacketCore)) {
        return super.equals(obj);
      }
      next.net.netty.test.proto.PacketCoreWapper.PacketCore other = (next.net.netty.test.proto.PacketCoreWapper.PacketCore) obj;

      boolean result = true;
      result = result && getTypeList()
          .equals(other.getTypeList());
      result = result && (hasPacket1() == other.hasPacket1());
      if (hasPacket1()) {
        result = result && getPacket1()
            .equals(other.getPacket1());
      }
      result = result && (hasPacket2() == other.hasPacket2());
      if (hasPacket2()) {
        result = result && getPacket2()
            .equals(other.getPacket2());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getTypeCount() > 0) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getTypeList().hashCode();
      }
      if (hasPacket1()) {
        hash = (37 * hash) + PACKET1_FIELD_NUMBER;
        hash = (53 * hash) + getPacket1().hashCode();
      }
      if (hasPacket2()) {
        hash = (37 * hash) + PACKET2_FIELD_NUMBER;
        hash = (53 * hash) + getPacket2().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(next.net.netty.test.proto.PacketCoreWapper.PacketCore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PacketCore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PacketCore)
        next.net.netty.test.proto.PacketCoreWapper.PacketCoreOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return next.net.netty.test.proto.PacketCoreWapper.internal_static_PacketCore_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return next.net.netty.test.proto.PacketCoreWapper.internal_static_PacketCore_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                next.net.netty.test.proto.PacketCoreWapper.PacketCore.class, next.net.netty.test.proto.PacketCoreWapper.PacketCore.Builder.class);
      }

      // Construct using next.net.netty.test.proto.PacketCoreWapper.PacketCore.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (packet1Builder_ == null) {
          packet1_ = null;
        } else {
          packet1_ = null;
          packet1Builder_ = null;
        }
        if (packet2Builder_ == null) {
          packet2_ = null;
        } else {
          packet2_ = null;
          packet2Builder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return next.net.netty.test.proto.PacketCoreWapper.internal_static_PacketCore_descriptor;
      }

      public next.net.netty.test.proto.PacketCoreWapper.PacketCore getDefaultInstanceForType() {
        return next.net.netty.test.proto.PacketCoreWapper.PacketCore.getDefaultInstance();
      }

      public next.net.netty.test.proto.PacketCoreWapper.PacketCore build() {
        next.net.netty.test.proto.PacketCoreWapper.PacketCore result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public next.net.netty.test.proto.PacketCoreWapper.PacketCore buildPartial() {
        next.net.netty.test.proto.PacketCoreWapper.PacketCore result = new next.net.netty.test.proto.PacketCoreWapper.PacketCore(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          type_ = java.util.Collections.unmodifiableList(type_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.type_ = type_;
        if (packet1Builder_ == null) {
          result.packet1_ = packet1_;
        } else {
          result.packet1_ = packet1Builder_.build();
        }
        if (packet2Builder_ == null) {
          result.packet2_ = packet2_;
        } else {
          result.packet2_ = packet2Builder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof next.net.netty.test.proto.PacketCoreWapper.PacketCore) {
          return mergeFrom((next.net.netty.test.proto.PacketCoreWapper.PacketCore)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(next.net.netty.test.proto.PacketCoreWapper.PacketCore other) {
        if (other == next.net.netty.test.proto.PacketCoreWapper.PacketCore.getDefaultInstance()) return this;
        if (!other.type_.isEmpty()) {
          if (type_.isEmpty()) {
            type_ = other.type_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTypeIsMutable();
            type_.addAll(other.type_);
          }
          onChanged();
        }
        if (other.hasPacket1()) {
          mergePacket1(other.getPacket1());
        }
        if (other.hasPacket2()) {
          mergePacket2(other.getPacket2());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        next.net.netty.test.proto.PacketCoreWapper.PacketCore parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (next.net.netty.test.proto.PacketCoreWapper.PacketCore) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> type_ = java.util.Collections.emptyList();
      private void ensureTypeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          type_ = new java.util.ArrayList<java.lang.Integer>(type_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 type = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getTypeList() {
        return java.util.Collections.unmodifiableList(type_);
      }
      /**
       * <code>repeated int32 type = 1;</code>
       */
      public int getTypeCount() {
        return type_.size();
      }
      /**
       * <code>repeated int32 type = 1;</code>
       */
      public int getType(int index) {
        return type_.get(index);
      }
      /**
       * <code>repeated int32 type = 1;</code>
       */
      public Builder setType(
          int index, int value) {
        ensureTypeIsMutable();
        type_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 1;</code>
       */
      public Builder addType(int value) {
        ensureTypeIsMutable();
        type_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 1;</code>
       */
      public Builder addAllType(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, type_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 type = 1;</code>
       */
      public Builder clearType() {
        type_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private next.net.netty.test.proto.Packet1Wapper.Packet1 packet1_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          next.net.netty.test.proto.Packet1Wapper.Packet1, next.net.netty.test.proto.Packet1Wapper.Packet1.Builder, next.net.netty.test.proto.Packet1Wapper.Packet1OrBuilder> packet1Builder_;
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      public boolean hasPacket1() {
        return packet1Builder_ != null || packet1_ != null;
      }
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      public next.net.netty.test.proto.Packet1Wapper.Packet1 getPacket1() {
        if (packet1Builder_ == null) {
          return packet1_ == null ? next.net.netty.test.proto.Packet1Wapper.Packet1.getDefaultInstance() : packet1_;
        } else {
          return packet1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      public Builder setPacket1(next.net.netty.test.proto.Packet1Wapper.Packet1 value) {
        if (packet1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          packet1_ = value;
          onChanged();
        } else {
          packet1Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      public Builder setPacket1(
          next.net.netty.test.proto.Packet1Wapper.Packet1.Builder builderForValue) {
        if (packet1Builder_ == null) {
          packet1_ = builderForValue.build();
          onChanged();
        } else {
          packet1Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      public Builder mergePacket1(next.net.netty.test.proto.Packet1Wapper.Packet1 value) {
        if (packet1Builder_ == null) {
          if (packet1_ != null) {
            packet1_ =
              next.net.netty.test.proto.Packet1Wapper.Packet1.newBuilder(packet1_).mergeFrom(value).buildPartial();
          } else {
            packet1_ = value;
          }
          onChanged();
        } else {
          packet1Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      public Builder clearPacket1() {
        if (packet1Builder_ == null) {
          packet1_ = null;
          onChanged();
        } else {
          packet1_ = null;
          packet1Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      public next.net.netty.test.proto.Packet1Wapper.Packet1.Builder getPacket1Builder() {
        
        onChanged();
        return getPacket1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      public next.net.netty.test.proto.Packet1Wapper.Packet1OrBuilder getPacket1OrBuilder() {
        if (packet1Builder_ != null) {
          return packet1Builder_.getMessageOrBuilder();
        } else {
          return packet1_ == null ?
              next.net.netty.test.proto.Packet1Wapper.Packet1.getDefaultInstance() : packet1_;
        }
      }
      /**
       * <code>optional .Packet1 Packet1 = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          next.net.netty.test.proto.Packet1Wapper.Packet1, next.net.netty.test.proto.Packet1Wapper.Packet1.Builder, next.net.netty.test.proto.Packet1Wapper.Packet1OrBuilder> 
          getPacket1FieldBuilder() {
        if (packet1Builder_ == null) {
          packet1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              next.net.netty.test.proto.Packet1Wapper.Packet1, next.net.netty.test.proto.Packet1Wapper.Packet1.Builder, next.net.netty.test.proto.Packet1Wapper.Packet1OrBuilder>(
                  getPacket1(),
                  getParentForChildren(),
                  isClean());
          packet1_ = null;
        }
        return packet1Builder_;
      }

      private next.net.netty.test.proto.Packet2Wapper.Packet2 packet2_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          next.net.netty.test.proto.Packet2Wapper.Packet2, next.net.netty.test.proto.Packet2Wapper.Packet2.Builder, next.net.netty.test.proto.Packet2Wapper.Packet2OrBuilder> packet2Builder_;
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      public boolean hasPacket2() {
        return packet2Builder_ != null || packet2_ != null;
      }
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      public next.net.netty.test.proto.Packet2Wapper.Packet2 getPacket2() {
        if (packet2Builder_ == null) {
          return packet2_ == null ? next.net.netty.test.proto.Packet2Wapper.Packet2.getDefaultInstance() : packet2_;
        } else {
          return packet2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      public Builder setPacket2(next.net.netty.test.proto.Packet2Wapper.Packet2 value) {
        if (packet2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          packet2_ = value;
          onChanged();
        } else {
          packet2Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      public Builder setPacket2(
          next.net.netty.test.proto.Packet2Wapper.Packet2.Builder builderForValue) {
        if (packet2Builder_ == null) {
          packet2_ = builderForValue.build();
          onChanged();
        } else {
          packet2Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      public Builder mergePacket2(next.net.netty.test.proto.Packet2Wapper.Packet2 value) {
        if (packet2Builder_ == null) {
          if (packet2_ != null) {
            packet2_ =
              next.net.netty.test.proto.Packet2Wapper.Packet2.newBuilder(packet2_).mergeFrom(value).buildPartial();
          } else {
            packet2_ = value;
          }
          onChanged();
        } else {
          packet2Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      public Builder clearPacket2() {
        if (packet2Builder_ == null) {
          packet2_ = null;
          onChanged();
        } else {
          packet2_ = null;
          packet2Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      public next.net.netty.test.proto.Packet2Wapper.Packet2.Builder getPacket2Builder() {
        
        onChanged();
        return getPacket2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      public next.net.netty.test.proto.Packet2Wapper.Packet2OrBuilder getPacket2OrBuilder() {
        if (packet2Builder_ != null) {
          return packet2Builder_.getMessageOrBuilder();
        } else {
          return packet2_ == null ?
              next.net.netty.test.proto.Packet2Wapper.Packet2.getDefaultInstance() : packet2_;
        }
      }
      /**
       * <code>optional .Packet2 Packet2 = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          next.net.netty.test.proto.Packet2Wapper.Packet2, next.net.netty.test.proto.Packet2Wapper.Packet2.Builder, next.net.netty.test.proto.Packet2Wapper.Packet2OrBuilder> 
          getPacket2FieldBuilder() {
        if (packet2Builder_ == null) {
          packet2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              next.net.netty.test.proto.Packet2Wapper.Packet2, next.net.netty.test.proto.Packet2Wapper.Packet2.Builder, next.net.netty.test.proto.Packet2Wapper.Packet2OrBuilder>(
                  getPacket2(),
                  getParentForChildren(),
                  isClean());
          packet2_ = null;
        }
        return packet2Builder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:PacketCore)
    }

    // @@protoc_insertion_point(class_scope:PacketCore)
    private static final next.net.netty.test.proto.PacketCoreWapper.PacketCore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new next.net.netty.test.proto.PacketCoreWapper.PacketCore();
    }

    public static next.net.netty.test.proto.PacketCoreWapper.PacketCore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PacketCore>
        PARSER = new com.google.protobuf.AbstractParser<PacketCore>() {
      public PacketCore parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PacketCore(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PacketCore> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PacketCore> getParserForType() {
      return PARSER;
    }

    public next.net.netty.test.proto.PacketCoreWapper.PacketCore getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PacketCore_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PacketCore_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020PacketCore.proto\032\rPacket1.proto\032\rPacke" +
      "t2.proto\"P\n\nPacketCore\022\014\n\004type\030\001 \003(\005\022\031\n\007" +
      "Packet1\030e \001(\0132\010.Packet1\022\031\n\007Packet2\030f \001(\013" +
      "2\010.Packet2BA\n\031next.net.netty.test.protoB" +
      "\020PacketCoreWapper\252\002\021next.client.protob\006p" +
      "roto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          next.net.netty.test.proto.Packet1Wapper.getDescriptor(),
          next.net.netty.test.proto.Packet2Wapper.getDescriptor(),
        }, assigner);
    internal_static_PacketCore_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PacketCore_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PacketCore_descriptor,
        new java.lang.String[] { "Type", "Packet1", "Packet2", });
    next.net.netty.test.proto.Packet1Wapper.getDescriptor();
    next.net.netty.test.proto.Packet2Wapper.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
